name: CI/CD Pipeline

on:
  push:
    branches:
      - main

  workflow_dispatch:

env:
  AWS_REGION: eu-west-1
  ECR_REGISTRY: 728594302455.dkr.ecr.eu-west-1.amazonaws.com
  ECR_REPOSITORY: savorpalette-app
  IMAGE_TAG: latest
  K8S_NAMESPACE: savorpalette
  CLUSTER_NAME: savorpalette-cluster

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker image to ECR
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: latest

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig \
            --region $AWS_REGION \
            --name $CLUSTER_NAME

      - name: Apply ClusterRoleBinding
        run: |
          kubectl apply -f k8s_manifests/rolebinding.yaml --validate=false

      - name: Apply Kubernetes namespace
        run: kubectl apply -f k8s_manifests/namespace.yaml

      - name: Apply DB Secret
        run: kubectl apply -f k8s_manifests/secret.yaml

      - name: Apply ConfigMap (DB variables)
        run: kubectl apply -f k8s_manifests/configmap.yaml

      - name: Create SQL script ConfigMap
        run: |
          kubectl create configmap sql-script \
            --from-file=recipe_login_db.sql=db-init/recipe_login_db.sql \
            -n $K8S_NAMESPACE --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Application
        run: |
          kubectl apply -f k8s_manifests/deployment.yaml
          kubectl apply -f k8s_manifests/service.yaml

      - name: Initialize RDS Database
        run: |
          kubectl apply -f k8s_manifests/job-db-import.yaml
          kubectl wait --for=condition=complete job/db-import-job -n $K8S_NAMESPACE --timeout=120s || true
